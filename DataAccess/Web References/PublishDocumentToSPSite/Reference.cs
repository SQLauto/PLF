//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DataAccess.PublishDocumentToSPSite {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PublishDocToSPSoap", Namespace="http://www.tcdsb.org/")]
    public partial class PublishDocToSP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentByNameAndParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentByCategoryToSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SLIPPDFOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PublishDocToSP() {
            this.Url = global::DataAccess.Properties.Settings.Default.DataAccess_PublishDocumentToSPSite_PublishDocToSP;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DocumentsCompletedEventHandler DocumentsCompleted;
        
        /// <remarks/>
        public event DocumentByNameAndParameterCompletedEventHandler DocumentByNameAndParameterCompleted;
        
        /// <remarks/>
        public event DocumentByCategoryCompletedEventHandler DocumentByCategoryCompleted;
        
        /// <remarks/>
        public event DocumentByCategoryToSiteCompletedEventHandler DocumentByCategoryToSiteCompleted;
        
        /// <remarks/>
        public event SLIPPDFCompletedEventHandler SLIPPDFCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tcdsb.org/Documents", RequestNamespace="http://www.tcdsb.org/", ResponseNamespace="http://www.tcdsb.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Documents(string _Type, string _schoolyear, string _schoolcode, object _Document) {
            object[] results = this.Invoke("Documents", new object[] {
                        _Type,
                        _schoolyear,
                        _schoolcode,
                        _Document});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentsAsync(string _Type, string _schoolyear, string _schoolcode, object _Document) {
            this.DocumentsAsync(_Type, _schoolyear, _schoolcode, _Document, null);
        }
        
        /// <remarks/>
        public void DocumentsAsync(string _Type, string _schoolyear, string _schoolcode, object _Document, object userState) {
            if ((this.DocumentsOperationCompleted == null)) {
                this.DocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentsOperationCompleted);
            }
            this.InvokeAsync("Documents", new object[] {
                        _Type,
                        _schoolyear,
                        _schoolcode,
                        _Document}, this.DocumentsOperationCompleted, userState);
        }
        
        private void OnDocumentsOperationCompleted(object arg) {
            if ((this.DocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentsCompleted(this, new DocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tcdsb.org/DocumentByNameAndParameter", RequestNamespace="http://www.tcdsb.org/", ResponseNamespace="http://www.tcdsb.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DocumentByNameAndParameter(string _Type, string reportName, object reportParameters, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief) {
            object[] results = this.Invoke("DocumentByNameAndParameter", new object[] {
                        _Type,
                        reportName,
                        reportParameters,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentByNameAndParameterAsync(string _Type, string reportName, object reportParameters, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief) {
            this.DocumentByNameAndParameterAsync(_Type, reportName, reportParameters, _schoolyear, _schoolcode, _schoolName, _schoolBrief, null);
        }
        
        /// <remarks/>
        public void DocumentByNameAndParameterAsync(string _Type, string reportName, object reportParameters, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, object userState) {
            if ((this.DocumentByNameAndParameterOperationCompleted == null)) {
                this.DocumentByNameAndParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentByNameAndParameterOperationCompleted);
            }
            this.InvokeAsync("DocumentByNameAndParameter", new object[] {
                        _Type,
                        reportName,
                        reportParameters,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief}, this.DocumentByNameAndParameterOperationCompleted, userState);
        }
        
        private void OnDocumentByNameAndParameterOperationCompleted(object arg) {
            if ((this.DocumentByNameAndParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentByNameAndParameterCompleted(this, new DocumentByNameAndParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tcdsb.org/DocumentByCategory", RequestNamespace="http://www.tcdsb.org/", ResponseNamespace="http://www.tcdsb.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DocumentByCategory(string _Category, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, object _Document) {
            object[] results = this.Invoke("DocumentByCategory", new object[] {
                        _Category,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief,
                        _Document});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentByCategoryAsync(string _Category, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, object _Document) {
            this.DocumentByCategoryAsync(_Category, _schoolyear, _schoolcode, _schoolName, _schoolBrief, _Document, null);
        }
        
        /// <remarks/>
        public void DocumentByCategoryAsync(string _Category, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, object _Document, object userState) {
            if ((this.DocumentByCategoryOperationCompleted == null)) {
                this.DocumentByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentByCategoryOperationCompleted);
            }
            this.InvokeAsync("DocumentByCategory", new object[] {
                        _Category,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief,
                        _Document}, this.DocumentByCategoryOperationCompleted, userState);
        }
        
        private void OnDocumentByCategoryOperationCompleted(object arg) {
            if ((this.DocumentByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentByCategoryCompleted(this, new DocumentByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tcdsb.org/DocumentByCategoryToSite", RequestNamespace="http://www.tcdsb.org/", ResponseNamespace="http://www.tcdsb.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DocumentByCategoryToSite(string _Category, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, string siteUrl, string documentCategory, string documentCategoryBrief, string documentLibrary, object _Document) {
            object[] results = this.Invoke("DocumentByCategoryToSite", new object[] {
                        _Category,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief,
                        siteUrl,
                        documentCategory,
                        documentCategoryBrief,
                        documentLibrary,
                        _Document});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentByCategoryToSiteAsync(string _Category, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, string siteUrl, string documentCategory, string documentCategoryBrief, string documentLibrary, object _Document) {
            this.DocumentByCategoryToSiteAsync(_Category, _schoolyear, _schoolcode, _schoolName, _schoolBrief, siteUrl, documentCategory, documentCategoryBrief, documentLibrary, _Document, null);
        }
        
        /// <remarks/>
        public void DocumentByCategoryToSiteAsync(string _Category, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, string siteUrl, string documentCategory, string documentCategoryBrief, string documentLibrary, object _Document, object userState) {
            if ((this.DocumentByCategoryToSiteOperationCompleted == null)) {
                this.DocumentByCategoryToSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentByCategoryToSiteOperationCompleted);
            }
            this.InvokeAsync("DocumentByCategoryToSite", new object[] {
                        _Category,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief,
                        siteUrl,
                        documentCategory,
                        documentCategoryBrief,
                        documentLibrary,
                        _Document}, this.DocumentByCategoryToSiteOperationCompleted, userState);
        }
        
        private void OnDocumentByCategoryToSiteOperationCompleted(object arg) {
            if ((this.DocumentByCategoryToSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentByCategoryToSiteCompleted(this, new DocumentByCategoryToSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tcdsb.org/SLIPPDF", RequestNamespace="http://www.tcdsb.org/", ResponseNamespace="http://www.tcdsb.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SLIPPDF(string _Type, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, object _Document) {
            object[] results = this.Invoke("SLIPPDF", new object[] {
                        _Type,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief,
                        _Document});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SLIPPDFAsync(string _Type, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, object _Document) {
            this.SLIPPDFAsync(_Type, _schoolyear, _schoolcode, _schoolName, _schoolBrief, _Document, null);
        }
        
        /// <remarks/>
        public void SLIPPDFAsync(string _Type, string _schoolyear, string _schoolcode, string _schoolName, string _schoolBrief, object _Document, object userState) {
            if ((this.SLIPPDFOperationCompleted == null)) {
                this.SLIPPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSLIPPDFOperationCompleted);
            }
            this.InvokeAsync("SLIPPDF", new object[] {
                        _Type,
                        _schoolyear,
                        _schoolcode,
                        _schoolName,
                        _schoolBrief,
                        _Document}, this.SLIPPDFOperationCompleted, userState);
        }
        
        private void OnSLIPPDFOperationCompleted(object arg) {
            if ((this.SLIPPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SLIPPDFCompleted(this, new SLIPPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DocumentsCompletedEventHandler(object sender, DocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DocumentByNameAndParameterCompletedEventHandler(object sender, DocumentByNameAndParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentByNameAndParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentByNameAndParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DocumentByCategoryCompletedEventHandler(object sender, DocumentByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DocumentByCategoryToSiteCompletedEventHandler(object sender, DocumentByCategoryToSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentByCategoryToSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentByCategoryToSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SLIPPDFCompletedEventHandler(object sender, SLIPPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SLIPPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SLIPPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591